// <auto-generated />
using System;
using Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(WardrobeDBContext))]
    partial class WardrobeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.ClothingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "brand");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "colour");

                    b.Property<int>("ImageId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "imageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<int>("Occasion")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "occasion");

                    b.Property<int>("Season")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "season");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "size");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "userId");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique();

                    b.ToTable("ClothingItems");

                    b.HasData(
                        new
                        {
                            Id = 15,
                            Brand = "Y/Project",
                            Category = 5,
                            Colour = "Black",
                            ImageId = 1,
                            Name = "Black Oversized Jumper",
                            Occasion = 3,
                            Season = 2,
                            Size = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 1,
                            Brand = "Unknown",
                            Category = 8,
                            Colour = "Black",
                            ImageId = 2,
                            Name = "Asymmetrical Black Skirt",
                            Occasion = 1,
                            Season = 1,
                            Size = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Wilfred",
                            Category = 5,
                            Colour = "Blue",
                            ImageId = 3,
                            Name = "Blue Faux Leather Jacket",
                            Occasion = 2,
                            Season = 0,
                            Size = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Brand = "M&S",
                            Category = 8,
                            Colour = "Brown",
                            ImageId = 4,
                            Name = "Herringbone Bias-Cut Skirt",
                            Occasion = 2,
                            Season = 3,
                            Size = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Brand = "& Other Stories",
                            Category = 0,
                            Colour = "Dark Grey",
                            ImageId = 5,
                            Name = "Straight-Leg Grey Jeans",
                            Occasion = 3,
                            Season = 2,
                            Size = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Aritzia",
                            Category = 6,
                            Colour = "Blue",
                            ImageId = 6,
                            Name = "Denim Corset Top w/ Back Zip",
                            Occasion = 6,
                            Season = 1,
                            Size = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Calvin Klein",
                            Category = 2,
                            Colour = "Grey",
                            ImageId = 7,
                            Name = "Double-Breasted Coat w/ Belt and Button Stand Collar",
                            Occasion = 0,
                            Season = 3,
                            Size = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Brand = "COS",
                            Category = 9,
                            Colour = "Navy",
                            ImageId = 8,
                            Name = "Long-Sleeve Cotton Dungaree",
                            Occasion = 5,
                            Season = 2,
                            Size = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Brand = "COS",
                            Category = 5,
                            Colour = "Dark Grey",
                            ImageId = 9,
                            Name = "Cashmere V-Neck Cardigan",
                            Occasion = 6,
                            Season = 3,
                            Size = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Brand = "The North Face",
                            Category = 2,
                            Colour = "Black",
                            ImageId = 10,
                            Name = "Waterproof Coat w/ Removable Down Layer",
                            Occasion = 5,
                            Season = 3,
                            Size = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Wilfred",
                            Category = 3,
                            Colour = "Light Blue",
                            ImageId = 11,
                            Name = "Off-The-Shoulder Crop Top",
                            Occasion = 6,
                            Season = 0,
                            Size = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Unknown",
                            Category = 1,
                            Colour = "Black",
                            ImageId = 12,
                            Name = "Stripe Off-The-Shoulder Top",
                            Occasion = 1,
                            Season = 1,
                            Size = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Topshop",
                            Category = 0,
                            Colour = "Dark Grey",
                            ImageId = 13,
                            Name = "High-Waisted Trousers w/ Matching Belt",
                            Occasion = 3,
                            Season = 2,
                            Size = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            Brand = "AllSaints",
                            Category = 4,
                            Colour = "White",
                            ImageId = 14,
                            Name = "Cowl-Neck Slip Dress",
                            Occasion = 1,
                            Season = 1,
                            Size = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            Brand = "Uniqlo",
                            Category = 0,
                            Colour = "White",
                            ImageId = 15,
                            Name = "Straight-Leg Knit Trousers w/ Elastic Waistband",
                            Occasion = 3,
                            Season = 0,
                            Size = 3,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Backend.Models.Colour", b =>
                {
                    b.Property<int>("ColourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColourId"));

                    b.Property<byte>("A")
                        .HasColumnType("tinyint");

                    b.Property<byte>("B")
                        .HasColumnType("tinyint");

                    b.Property<byte>("G")
                        .HasColumnType("tinyint");

                    b.Property<byte>("R")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UserProfileUserId")
                        .HasColumnType("int");

                    b.HasKey("ColourId");

                    b.HasIndex("UserProfileUserId");

                    b.ToTable("Colour");
                });

            modelBuilder.Entity("Backend.Models.ImageLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClothingItemId")
                        .HasColumnType("int");

                    b.Property<string>("LocationPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalFilename")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImageLocations");
                });

            modelBuilder.Entity("Backend.Models.ImageUrl", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.ToTable("ImageUrls");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/BlackJumper.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 2,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/blackSkirt.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 3,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/BlueJacket.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 4,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/BrownSkirt.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 5,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DarkGreyJeans.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 6,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 7,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 8,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 9,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 10,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 11,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 12,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 13,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 14,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        },
                        new
                        {
                            ImageId = 15,
                            Url = "https://wadrobe-images.s3.eu-west-2.amazonaws.com/DenimTop.jpg.jpg"
                        });
                });

            modelBuilder.Entity("Backend.Models.Outfit", b =>
                {
                    b.Property<int>("OutfitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutfitId"));

                    b.Property<string>("ClothingItemsIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "clothingItemsIds");

                    b.HasKey("OutfitId");

                    b.ToTable("Outfits");
                });

            modelBuilder.Entity("Backend.Models.UserLogin", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogins");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "helloworld",
                            UserName = "testuser1@wardrobe.com"
                        },
                        new
                        {
                            UserId = 2,
                            Password = "goodbyeworld",
                            UserName = "testuser2@wardrobe.com"
                        },
                        new
                        {
                            UserId = 3,
                            Password = "hello",
                            UserName = "testuser3@wardrobe.com"
                        },
                        new
                        {
                            UserId = 4,
                            Password = "password",
                            UserName = "testuser4@wardrobe.com"
                        });
                });

            modelBuilder.Entity("Backend.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Backend.Models.WearingHistory", b =>
                {
                    b.Property<int>("OutfitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutfitID"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OutfitID");

                    b.ToTable("WearingHistories");
                });

            modelBuilder.Entity("Backend.Models.ClothingItem", b =>
                {
                    b.HasOne("Backend.Models.ImageUrl", "ImageUrl")
                        .WithOne()
                        .HasForeignKey("Backend.Models.ClothingItem", "ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageUrl");
                });

            modelBuilder.Entity("Backend.Models.Colour", b =>
                {
                    b.HasOne("Backend.Models.UserProfile", null)
                        .WithMany("FavouriteColours")
                        .HasForeignKey("UserProfileUserId");
                });

            modelBuilder.Entity("Backend.Models.UserProfile", b =>
                {
                    b.Navigation("FavouriteColours");
                });
#pragma warning restore 612, 618
        }
    }
}
